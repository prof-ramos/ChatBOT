version: '3.8'

# Stack de Monitoring para ChatBOT Discord
# Prometheus + Grafana com Traefik

services:
  # Prometheus - Coleta de métricas
  prometheus:
    image: prom/prometheus:latest
    container_name: chatbot-prometheus
    restart: unless-stopped

    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'

    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus

    networks:
      - traefik_network
      - monitoring

    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.prometheus.rule=Host(`prometheus.${DOMAIN}`)"
      - "traefik.http.routers.prometheus.entrypoints=websecure"
      - "traefik.http.routers.prometheus.tls=true"
      - "traefik.http.routers.prometheus.tls.certresolver=letsencrypt"
      - "traefik.http.services.prometheus.loadbalancer.server.port=9090"
      # Basic Auth (opcional)
      # - "traefik.http.routers.prometheus.middlewares=auth"
      # - "traefik.http.middlewares.auth.basicauth.users=admin:$$apr1$$..."

    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M

  # Grafana - Visualização de métricas
  grafana:
    image: grafana/grafana:latest
    container_name: chatbot-grafana
    restart: unless-stopped

    environment:
      - GF_SECURITY_ADMIN_USER=${GRAFANA_USER:-admin}
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-admin}
      - GF_INSTALL_PLUGINS=grafana-clock-panel,grafana-simple-json-datasource
      - GF_SERVER_ROOT_URL=https://grafana.${DOMAIN}

    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning:ro

    networks:
      - traefik_network
      - monitoring

    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.grafana.rule=Host(`grafana.${DOMAIN}`)"
      - "traefik.http.routers.grafana.entrypoints=websecure"
      - "traefik.http.routers.grafana.tls=true"
      - "traefik.http.routers.grafana.tls.certresolver=letsencrypt"
      - "traefik.http.services.grafana.loadbalancer.server.port=3000"

    depends_on:
      - prometheus

    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 256M

  # Node Exporter - Métricas do host
  node-exporter:
    image: prom/node-exporter:latest
    container_name: chatbot-node-exporter
    restart: unless-stopped

    command:
      - '--path.rootfs=/host'

    volumes:
      - /:/host:ro,rslave

    networks:
      - monitoring

    deploy:
      resources:
        limits:
          cpus: '0.1'
          memory: 64M

  # cAdvisor - Métricas dos containers
  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: chatbot-cadvisor
    restart: unless-stopped

    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro

    networks:
      - monitoring

    deploy:
      resources:
        limits:
          cpus: '0.2'
          memory: 128M

volumes:
  prometheus_data:
    driver: local
  grafana_data:
    driver: local

networks:
  traefik_network:
    external: true
  monitoring:
    driver: bridge
