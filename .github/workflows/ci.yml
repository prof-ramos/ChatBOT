name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  lint:
    name: Code Quality & Linting
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'
        cache: 'pip'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install ruff black isort mypy bandit safety
        pip install discord.py aiohttp chromadb openai pymupdf python-docx docx2txt

    - name: Run Ruff linter
      run: ruff check . --output-format=github
      continue-on-error: true

    - name: Check code formatting with Black
      run: black --check .
      continue-on-error: true

    - name: Check import sorting with isort
      run: isort --check-only .
      continue-on-error: true

    - name: Type checking with mypy
      run: mypy --ignore-missing-imports *.py
      continue-on-error: true

    - name: Security check with Bandit
      run: bandit -r . -ll -f json -o bandit-report.json
      continue-on-error: true

    - name: Upload Bandit report
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: bandit-security-report
        path: bandit-report.json

  test:
    name: Run Tests
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'
        cache: 'pip'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest pytest-cov pytest-asyncio
        pip install discord.py aiohttp chromadb openai pymupdf python-docx docx2txt

    - name: Run tests with coverage
      run: |
        pytest --cov=. --cov-report=xml --cov-report=html --cov-report=term
      continue-on-error: true

    - name: Upload coverage reports
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: coverage-report
        path: htmlcov/

  dependency-review:
    name: Dependency Security Scan
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'

    steps:
    - uses: actions/checkout@v4

    - name: Dependency Review
      uses: actions/dependency-review-action@v4
      with:
        fail-on-severity: moderate

  build:
    name: Build Validation
    runs-on: ubuntu-latest
    needs: [lint, test]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install discord.py aiohttp chromadb openai pymupdf python-docx docx2txt

    - name: Validate imports
      run: |
        python -c "import database; import vector_db; import main; print('All modules import successfully')"

    - name: Check for syntax errors
      run: |
        python -m py_compile *.py
