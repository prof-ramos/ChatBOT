{"file_contents":{"README.md":{"content":"# Python Discord Bot\n\nThis is a starting point for making your own Discord bot using Python and the [discordpy](https://discordpy.readthedocs.io/) library.\nRead [their getting-started guides](https://discordpy.readthedocs.io/en/stable/#getting-started) to get the most out of this template.\n\n## Getting Started\n\nTo get set up, you'll need to follow [these bot account setup instructions](https://discordpy.readthedocs.io/en/stable/discord.html),\nand then copy the token for your bot and added it as a secret with the key of `TOKEN` in the \"Secrets (Environment variables)\" panel.\n\n## FAQ\n\nIf you get the following error message while trying to start the server: `429 Too Many Requests` (accompanied by a lot of HTML code), \ntry the advice given in this Stackoverflow question:\nhttps://stackoverflow.com/questions/66724687/in-discord-py-how-to-solve-the-error-for-toomanyrequests","size_bytes":878},"main.py":{"content":"# This code is based on the following example:\n# https://discordpy.readthedocs.io/en/stable/quickstart.html#a-minimal-bot\n\nimport os\n\nimport discord\n\nintents = discord.Intents.default()\nintents.message_content = True\n\nclient = discord.Client(intents=intents)\n\n\n@client.event\nasync def on_ready():\n    print('We have logged in as {0.user}'.format(client))\n\n\n@client.event\nasync def on_message(message):\n    if message.author == client.user:\n        return\n\n    if message.content.startswith('$hello'):\n        await message.channel.send('Hello!')\n\n\ntry:\n  token = os.getenv(\"TOKEN\") or \"\"\n  if token == \"\":\n    raise Exception(\"Please add your token to the Secrets pane.\")\n  client.run(token)\nexcept discord.HTTPException as e:\n    if e.status == 429:\n        print(\n            \"The Discord servers denied the connection for making too many requests\"\n        )\n        print(\n            \"Get help from https://stackoverflow.com/questions/66724687/in-discord-py-how-to-solve-the-error-for-toomanyrequests\"\n        )\n    else:\n        raise e\n","size_bytes":1042},"pyproject.toml":{"content":"[tool.poetry]\nname = \"python-template\"\nversion = \"0.1.0\"\ndescription = \"\"\nauthors = [\"Your Name <you@example.com>\"]\n\n[tool.poetry.dependencies]\npython = \">=3.10.0,<3.11\"\ndiscord = \"^2.3.2\"\n\n[tool.pyright]\n# https://github.com/microsoft/pyright/blob/main/docs/configuration.md\nuseLibraryCodeForTypes = true\n\n[tool.ruff]\n# https://beta.ruff.rs/docs/configuration/\nselect = ['E', 'W', 'F', 'I', 'B', 'C4', 'ARG', 'SIM']\nignore = ['W291', 'W292', 'W293']\n\n[build-system]\nrequires = [\"poetry-core>=1.0.0\"]\nbuild-backend = \"poetry.core.masonry.api\"","size_bytes":542}},"version":2}