# .coderabbit.yaml
# =============================================================================
# Discord Bot RAG - CodeRabbit Configuration
# Projeto: Discord chatbot with conversational memory and RAG capabilities
# Stack: Python 3.10+, Discord.py, Django, ChromaDB, Docker Swarm
# =============================================================================

# =============================================================================
# GLOBAL SETTINGS
# =============================================================================
language: "pt-BR"
tone_instructions: ""
early_access: false
enable_free_tier: true

# =============================================================================
# REVIEWS
# =============================================================================
reviews:
  profile: "assertive"
  request_changes_workflow: false
  high_level_summary: true
  high_level_summary_placeholder: "@coderabbitai summary"
  high_level_summary_in_walkthrough: false
  auto_title_placeholder: "@coderabbitai"
  auto_title_instructions: ""
  review_status: true
  commit_status: true
  fail_commit_status: false
  collapse_walkthrough: false
  changed_files_summary: true
  sequence_diagrams: true
  estimate_code_review_effort: true
  assess_linked_issues: true
  related_issues: true
  related_prs: true
  suggested_labels: true
  auto_apply_labels: false
  suggested_reviewers: true
  auto_assign_reviewers: false
  poem: true
  labeling_instructions: []
  path_filters: []
  path_instructions:
    - path: "src/discord_bot/**/*.py"
      instructions: "Foco em padrões async/await, tratamento de erros Discord.py, e performance de consultas ao banco de dados"
    - path: "src/admin_dashboard/**/*.py"
      instructions: "Foco em segurança Django, autenticação, validação de entrada, e proteção CSRF"
    - path: "*.sh"
      instructions: "Validar segurança de scripts bash, tratamento de erros, e compatibilidade POSIX"
    - path: "docker-compose*.yml"
      instructions: "Verificar configurações de segurança, volumes persistentes, e práticas Docker Swarm"
    - path: ".github/workflows/*.yml"
      instructions: "Validar segurança de workflows, uso correto de secrets, e otimização de CI/CD"
  abort_on_close: true
  disable_cache: false

  auto_review:
    enabled: true
    auto_incremental_review: true
    ignore_title_keywords:
      - "WIP"
      - "wip"
      - "draft"
    labels: []
    drafts: false
    base_branches:
      - main
      - develop
    ignore_usernames: []

  finishing_touches:
    docstrings:
      enabled: true
    unit_tests:
      enabled: true

  pre_merge_checks:
    docstrings:
      mode: "warning"
      threshold: 80
    title:
      mode: "warning"
      requirements: ""
    description:
      mode: "warning"
    issue_assessment:
      mode: "warning"

  tools:
    ast-grep:
      rule_dirs: []
      util_dirs: []
      essential_rules: true
      packages: []

    # Python Tools (ATIVADOS)
    ruff:
      enabled: true
    pylint:
      enabled: true
    flake8:
      enabled: true

    # Shell Script Tools (ATIVADOS)
    shellcheck:
      enabled: true

    # YAML Tools (ATIVADOS)
    yamllint:
      enabled: true

    # Docker Tools (ATIVADOS)
    hadolint:
      enabled: true

    # GitHub Actions Tools (ATIVADOS)
    actionlint:
      enabled: true

    # Markdown Tools (ATIVADOS)
    markdownlint:
      enabled: true

    # GitHub Integration (ATIVADOS)
    github-checks:
      enabled: true
      timeout_ms: 90000

    # Language Tool (ATIVADO - português)
    languagetool:
      enabled: true
      enabled_rules: []
      disabled_rules: []
      enabled_categories: []
      disabled_categories: []
      enabled_only: false
      level: "default"

    # Security Tools (ATIVADOS)
    gitleaks:
      enabled: true
    semgrep:
      enabled: true
      config_file: ""
    osvScanner:
      enabled: true

    # JavaScript/TypeScript Tools (DESATIVADOS)
    biome:
      enabled: false
    eslint:
      enabled: false
    oxc:
      enabled: false

    # Other Language Tools (DESATIVADOS)
    swiftlint:
      enabled: false
      config_file: ""
    phpstan:
      enabled: false
      level: "default"
    phpmd:
      enabled: false
    phpcs:
      enabled: false
    golangci-lint:
      enabled: false
      config_file: ""
    detekt:
      enabled: false
      config_file: ""
    rubocop:
      enabled: false
    buf:
      enabled: false
    regal:
      enabled: false
    pmd:
      enabled: false
      config_file: ""
    cppcheck:
      enabled: false
    circleci:
      enabled: false
    clippy:
      enabled: false
    sqlfluff:
      enabled: false
    prismaLint:
      enabled: false
    shopifyThemeCheck:
      enabled: false
    luacheck:
      enabled: false
    brakeman:
      enabled: false
    dotenvLint:
      enabled: false
    htmlhint:
      enabled: false
    checkmake:
      enabled: false
    checkov:
      enabled: false

# =============================================================================
# CHAT
# =============================================================================
chat:
  art: true
  auto_reply: true
  integrations:
    jira:
      usage: "auto"
    linear:
      usage: "auto"

# =============================================================================
# KNOWLEDGE BASE
# =============================================================================
knowledge_base:
  opt_out: false
  web_search:
    enabled: true
  code_guidelines:
    enabled: true
    filePatterns:
      - "CLAUDE.md"
      - "CONTRIBUTING.md"
      - "*.md"
  learnings:
    scope: "auto"
  issues:
    scope: "auto"
  jira:
    usage: "auto"
    project_keys: []
  linear:
    usage: "auto"
    team_keys: []
  pull_requests:
    scope: "auto"
  mcp:
    usage: "auto"
    disabled_servers: []

# =============================================================================
# CODE GENERATION
# =============================================================================
code_generation:
  docstrings:
    language: "pt-BR"
    path_instructions:
      - path: "src/discord_bot/**/*.py"
        instructions: "Usar docstrings estilo Google com exemplos de uso para funções async"
      - path: "src/admin_dashboard/**/*.py"
        instructions: "Usar docstrings estilo Google com ênfase em parâmetros de segurança Django"
  unit_tests:
    path_instructions:
      - path: "src/discord_bot/**/*.py"
        instructions: "Gerar testes pytest com fixtures para mocks de Discord.py e banco de dados"
      - path: "src/admin_dashboard/**/*.py"
        instructions: "Gerar testes Django com TestCase e fixtures para autenticação"
