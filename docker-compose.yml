version: '3.8'

services:
  discord-bot:
    image: discord-bot-rag:2.0.0
    build:
      context: .
      dockerfile: Dockerfile
      args:
        - BUILDKIT_INLINE_CACHE=1
    container_name: discord-chatbot-rag
    restart: unless-stopped

    # Variáveis de ambiente (configure no Portainer ou arquivo .env)
    environment:
      # Discord
      - TOKEN=${TOKEN:?TOKEN is required}

      # OpenRouter (AI Chat)
      - OPENROUTER_API_KEY=${OPENROUTER_API_KEY:?OPENROUTER_API_KEY is required}
      - OPENROUTER_MODEL=${OPENROUTER_MODEL:-meta-llama/llama-3.1-8b-instruct:free}

      # OpenAI (Embeddings)
      - OPENAI_API_KEY=${OPENAI_API_KEY:?OPENAI_API_KEY is required}
      - EMBEDDING_MODEL=${EMBEDDING_MODEL:-text-embedding-3-small}

      # Database paths
      - SQLITE_DB_PATH=/app/data/sqlite/bot_data.db
      - CHROMA_DB_PATH=/app/data/chroma_db

      # Bot behavior
      - CONVERSATION_HISTORY_LIMIT=${CONVERSATION_HISTORY_LIMIT:-10}
      - RAG_SEARCH_RESULTS=${RAG_SEARCH_RESULTS:-2}

      # System
      - PYTHONUNBUFFERED=1
      - PYTHONDONTWRITEBYTECODE=1
      - TZ=${TZ:-America/Sao_Paulo}

    # Volumes para persistência de dados
    volumes:
      - chatbot_sqlite:/app/data/sqlite
      - chatbot_chroma:/app/data/chroma_db
      - chatbot_logs:/app/logs
      # Descomentar se quiser importar documentos
      # - ./documentos:/app/documentos:ro

    # Labels para organização no Portainer
    labels:
      - "com.docker.compose.project=discord-bot-rag"
      - "traefik.enable=false"  # Bot Discord não precisa de proxy HTTP
      - "app.version=2.0.0"
      - "app.description=Discord Bot with RAG capabilities"

    # Healthcheck
    healthcheck:
      test: ["CMD", "python", "-c", "import sys; sys.exit(0)"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

    # Recursos (ajuste conforme necessário)
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 1G
        reservations:
          cpus: '0.25'
          memory: 256M
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s

    # Rede (opcional - se precisar conectar com outros serviços)
    networks:
      - discord_bot_network

    # Logging
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

# Volumes nomeados para persistência
volumes:
  chatbot_sqlite:
    driver: local
    labels:
      - "backup=true"
      - "description=SQLite database for conversation history"

  chatbot_chroma:
    driver: local
    labels:
      - "backup=true"
      - "description=ChromaDB vector database for RAG"

  chatbot_logs:
    driver: local
    labels:
      - "backup=false"
      - "description=Application logs"

# Redes
networks:
  discord_bot_network:
    driver: bridge
    labels:
      - "description=Internal network for Discord bot"
